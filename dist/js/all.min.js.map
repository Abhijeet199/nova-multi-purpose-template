{"version":3,"sources":["main.js","pricebutton.js","swiperconfig.js","type.js"],"names":["issMobile","test","navigator","userAgent","dropdown","document","querySelector","dropdowncontent","classList","remove","addEventListener","toggle","console","log","menu","menuspan","querySelectorAll","nav","body","forEach","item","window","event","contains","target","stopPropagation","monthlybtn","getElementById","yearlybtn","priceM","priceY","add","i","length","setTimeout","swiper","Swiper","effect","grabCursor","centeredSlides","autoplay","delay","disableOnInteraction","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","loop","mousewheel","keyboard","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","className","concat","isMobile","nxt","prv","style","visibility","TypeWriter","parentElement","words","cursor","_classCallCheck","this","time","txt","isDeleting","type","min","max","Math","random","_this","currentIndex","fullWord","getRandomValue","substring","innerText","JSON","parse","getAttribute"],"mappings":"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","file":"all.min.js","sourcesContent":["// const checkresize = () => {\n//     const banner = document.querySelector(\".banner\");\n//     console.log(window.innerHeight, window.innerWidth);\n//     if (window.innerHeight <= 700) {\n//         banner.classList.add(\"resized\");\n//     }\n//     else {\n//         banner.classList.remove(\"resized\");\n//     }\n// }\n\n\n\n\n\nconst issMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\nconst dropdown = document.querySelector('.dropdown');\nconst dropdowncontent = document.querySelector('.dropdown-content');\nif (issMobile) {\n    dropdown.classList.remove('hover');\n    dropdown.addEventListener('click', () => {\n        dropdowncontent.classList.toggle('active');\n        console.log(dropdowncontent);\n    });\n\n    // checkresize();\n    // window.addEventListener(\"resize\", checkresize);\n};\n\n\n\nconst menu = document.querySelector(\".menu\");\nconst menuspan = document.querySelectorAll('.menu span');\nconst nav = document.querySelector('.navigation');\nconst body = document.querySelector('body');\n\n\nmenu.addEventListener(\"click\", () => {\n    menuspan.forEach((item) => {\n        item.classList.toggle('toggle');\n    });\n    nav.classList.toggle('show');\n    body.classList.toggle('overflow');\n});\n\nwindow.addEventListener('click', (event) => {\n    if (!menu.contains(event.target)) {\n        menuspan.forEach((item) => {\n            item.classList.remove('toggle');\n        })\n        nav.classList.remove('show');\n        body.classList.remove('overflow');\n\n    }\n});\n\nnav.addEventListener('click', (event) => {\n    event.stopPropagation();\n});\n\n\n\n\n","const monthlybtn = document.getElementById('togglemonthly');\nconst yearlybtn = document.getElementById('toggleyearly');\n\n\n\nconst priceM = document.querySelectorAll('.priceM');\nconst priceY = document.querySelectorAll('.priceY');\n\n\n// monthly button\nmonthlybtn.addEventListener('click', () => {\n    yearlybtn.classList.remove('active');\n    monthlybtn.classList.add('active');\n\n\n    for (let i = 0; i < priceY.length; i++) {\n        priceY[i].classList.remove('show');\n    }\n    setTimeout(() => {\n        for (let i = 0; i < priceM.length; i++) {\n            priceM[i].classList.add('show');\n        }\n    }, 375);\n\n});\n\n\n// yearly button \nyearlybtn.addEventListener('click', () => {\n    monthlybtn.classList.remove('active');\n    yearlybtn.classList.add('active');\n\n\n    for (let i = 0; i < priceM.length; i++) {\n        priceM[i].classList.remove('show');\n    }\n\n    setTimeout(() => {\n        for (let i = 0; i < priceY.length; i++) {\n            priceY[i].classList.add('show');\n        }\n    }, 375);\n\n});","////   my config\n\nvar swiper = new Swiper('.swiper-container', {\n    effect: 'coverflow',\n    grabCursor: true,\n    centeredSlides: true,\n    autoplay: {\n        delay: 2500,\n        disableOnInteraction: false,\n    },\n    slidesPerView: 'auto',\n    coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n    },\n    loop: true,\n    mousewheel: true,\n    keyboard: true,\n    navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev',\n    },\n    pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n        renderBullet: function (index, className) {\n            return `<span class=\"${className}\"></span>`;\n        },\n    },\n});\n\nconst isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\nconst nxt = document.querySelector('.swiper-button-next');\nconst prv = document.querySelector('.swiper-button-prev');\nif (isMobile) {\n    nxt.style.visibility = 'hidden';\n    prv.style.visibility = 'hidden';\n\n}\nelse {\n    nxt.style.visibility = 'visible';\n    prv.style.visibility = 'visible';\n\n}\n","class TypeWriter {\n    constructor(parentElement, words, cursor) {\n        this.parentElement = parentElement;\n        this.cursor = cursor;\n        this.words = words;\n        this.index = 0;\n        this.time;\n        this.txt = \"\";\n        this.isDeleting = false;\n        this.type();\n    }\n\n    getRandomValue(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    type() {\n\n        const currentIndex = this.index % this.words.length;\n        const fullWord = this.words[currentIndex];\n\n        if (this.isDeleting) {\n            // remove char\n            this.cursor.classList.remove(\"blink\");\n            this.time = this.getRandomValue(20, 50);\n            this.txt = fullWord.substring(0, this.txt.length - 1);\n        }\n        else {\n            // add char\n            this.cursor.classList.remove(\"blink\");\n            this.time = this.getRandomValue(150, 200);\n            this.txt = fullWord.substring(0, this.txt.length + 1);\n        }\n\n        this.parentElement.innerText = this.txt;\n\n        if (!this.isDeleting && this.txt == fullWord) {\n            this.cursor.classList.add(\"blink\");\n            this.time = this.getRandomValue(900, 1100);\n            this.isDeleting = true;\n        }\n        else if (this.isDeleting && this.txt == \"\") {\n            this.cursor.classList.add(\"blink\");\n            this.time = this.getRandomValue(400, 600);\n            this.isDeleting = false;\n            this.index += 1;\n        }\n\n        setTimeout(() => this.type(), this.time);\n    }\n}\n\n\n\n\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const parentElement = document.querySelector(\".txt-type\");\n    const cursor = document.querySelector('.cursor');\n    const words = JSON.parse(parentElement.getAttribute(\"data-words\"));\n    new TypeWriter(parentElement, words, cursor);\n})"]}